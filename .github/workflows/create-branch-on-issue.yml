name: Create Branch on New Issue

on:
  issues:
    types: [opened, edited]

jobs:
  create-branch-and-update-files:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2


      - name: Check Action Suitability
        run: |
          if [[ "${{ contains(github.event.issue.title, 'Request to add Institution:') }}" == "true" ]]; then
            echo "Issue title contains 'Request to add Institution:'. Perform your desired actions here."
          else
            echo "Issue title does not contain 'Request to add Institution:'. Workflow will be skipped."
            exit 0
          fi


      - name: Set up Git
        run: |
          git config user.email "actions@wcrp-cmip.org"
          git config user.name "CMIP-IPO GitHub Action"
          git config credential.helper store
          git config --global user.email "actions@wcrp-cmip.org"
          git config --global user.name "CMIP-IPO GitHub Action"
          git config --global push.default current
          GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          echo "GH_TOKEN=${GH_TOKEN}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${GH_TOKEN}" >> $GITHUB_ENV
        shell: bash

      - name: Extract Institute
        id: get-institute-name
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          echo "ISSUE_TITLE=${ISSUE_TITLE}" >> $GITHUB_ENV
          TEXT_AFTER_COLON=$(echo "$ISSUE_TITLE" | awk -F':' '{print $2}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e 's/[[:space:]]/_/g' | tr -d '\r\n')
          echo "INSTITUTE=${TEXT_AFTER_COLON}" >> $GITHUB_ENV

      - name: Create Branch
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          echo "ISSUE_NUMBER=${ISSUE_NUMBER}" >> $GITHUB_ENV
          BRANCH_NAME="issue-${ISSUE_NUMBER}-${INSTITUTE}-add"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME

      - name: Run Python Check
        run: python script.py
        working-directory: .github/workflows/
        env:
          PYTHON_SCRIPT_OUTPUT: ${{ steps.run-python-script.outputs.stdout }}
          PYTHON_SCRIPT_ERROR: ${{ steps.run-python-script.outputs.stderr }}
        continue-on-error: true

      - name: Print output
        run: |
          echo "::set-output name=PYSTD::$PYTHON_SCRIPT_OUTPUT"
          echo "::set-output name=PYERR::$PYTHON_SCRIPT_ERROR"        

      - name: Check Python script output
        run: |
          echo "Python script output: $PYTHON_SCRIPT_OUTPUT"
          if [[ "$PYTHON_SCRIPT_OUTPUT" == "FAILED"* ]]; then
            echo "Issue processing failed. Closing the issue..."
            gh issue close "${{ github.event.issue.number }}"
            gh issue comment "${{ github.event.issue.number }}" --body "Processing failed with the following error: $PYTHON_SCRIPT_OUTPUT"
          else
            echo "Issue processed successfully."
          fi
        shell: bash


      - name: Commit and Push Changes
        run: |
          if [[ "$PYTHON_SCRIPT_OUTPUT" != "FAILED"* ]]; then
            git add -A
            git commit -m "Update last updated file and create new file based on issue"
            git push --force --set-upstream origin $BRANCH_NAME
            echo "BRANCH_LINK=[${BRANCH_NAME}](${{ github.event.repository.html_url }}/tree/${BRANCH_NAME})" >> $GITHUB_ENV
            gh issue comment ${{ github.event.issue.number }} --body "The current branch (\`${BRANCH_NAME}\`) has been created and changes have been pushed. [${BRANCH_NAME}](${{ github.event.repository.html_url }}/tree/${BRANCH_NAME})"
            # gh pr create --base main --head "${BRANCH_NAME}" --title "Pull Request from Issue ${ISSUE_TITLE}" --body "Pull Request Description"
          else
            gh issue comment ${{ github.event.issue.number }} --body "Your entry failed: ${PYTHON_SCRIPT_OUTPUT}"
          fi
        # continue-on-error: true

      - name: Pull request
        run: gh issue comment ${{ github.event.issue.number }} --body "All checks Passed:[Submit a pull request from here](${{ github.event.repository.html_url }}/pull/new/${BRANCH_NAME})"


      - name: Get Branch URL
        id: branch-url
        run: echo "BRANCH_URL=${{ github.event.repository.html_url }}/tree/${BRANCH_NAME}" >> $GITHUB_ENV
