name: UPDATE JSON Files from Branches

on:
  push:
    branches:
      - '*'

jobs:
  merge-json-files:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write

    steps:
      - name: Check out code
        uses: actions/checkout@v2
  
      - name: Set up Git
        run: |
          git config user.email "actions@wcrp-cmip.org"
          git config user.name "CMIP-IPO GitHub Action"
          git config credential.helper store
          git config --global user.email "actions@wcrp-cmip.org"
          git config --global user.name "CMIP-IPO GitHub Action"
          git config --global push.default current
          GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          echo "GH_TOKEN=${GH_TOKEN}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${GH_TOKEN}" >> $GITHUB_ENV
        shell: bash

      - name: Merge JSON files from branches
        run: |
          git pull
          git fetch --prune;
          branches=$(git ls-remote --heads origin | sed 's?.*refs/heads/??' | grep -v 'main$')
          # Merge JSON files from the main branch
          # python merge_json.py main_file.json main_file.json
          
          for branch in $branches; do
            echo "Merging JSON files from branch: $branch"
            git stash 
            git checkout $branch
            

            echo "checked ou "
            echo "$PWD"
            echo "{${ls-a}}"
            ls -a 

            # Attempt to merge changes from the main branch without creating a merge commit
            git pull --rebase origin main
            
            # Handle merge conflicts programmatically
            if [ $? -ne 0 ]; then
                # chmod +x .github/workflows/combine.py
                git show main:institutions.json > mainupdate.del
                # python .github/workflows/combine.py ../institutions.json mainupdate.del
                
                python -c "import json, sys; merge_json = lambda file1, file2: json.dump({**json.load(open(file1)), **json.load(open(file2))}, open(file1, 'w'), indent=4); merge_json('./institutions.json','./mainupdate.del')"
            
                rm test.del 
                rm mainupdate.del
                git rebase --continue
            fi
            git rebase --skip
            # Commit the changes after resolving conflicts
            git add -A;
            git commit -m "Merge JSON files from branch $branch"
            git push origin $branch
          done
          
          # Switch back to the main branch
          git checkout main
